<?xml version="1.0" encoding="utf-8" ?><PALADIN><Ability><Name>1 - Init</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-------------------------------------------------------------------------------
-- Variables &amp; Sanity checks (thanks to mentally for the code)
-------------------------------------------------------------------------------
-- PQInterface is an absolute requirement from now on.
if not IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;) then
	PQR_WriteToChat(&amp;quot;|cffDC143CPQInterface is required to run this profile!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
	PQR_WriteToChat(&amp;quot;|cffDC143CThe profile has been stopped.|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
	PQR_StopRotation()
end

-- Load LUA data files.
if PQR_RotationStarted == true then
	PQR_RotationStarted = false	

	-- Load LUA files
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_DarkSpoon_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_Broseph_Data.lua - Make sure it&amp;apos;s in your Data folder! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;|cffb73737You&amp;apos;re missing PQR_PQI.lua - It&amp;apos;s required to run the profile! The Rotation has been halted.|cffffffff&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
	end
end

--Check player is 90
if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
	PQR_WriteToChat(&amp;quot;|cffff0000This rotation is designed for level 90s only!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
	PQR_WriteToChat(&amp;quot;|cffff0000I won&amp;apos;t stop the rotation, but you use it at your own risk if you continue!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
end

--Check player is a pally (shouldn&amp;apos;t be necessary, but you never know)
if UnitClass(&amp;quot;player&amp;quot;) ~= &amp;quot;Paladin&amp;quot; then
	PQR_WriteToChat(&amp;quot;|cffff0000Don&amp;apos;t be silly, you aren&amp;apos;t a Paladin :P|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
	PQR_StopRotation()
end

--Check spec is holy
if GetSpecialization(&amp;quot;player&amp;quot;) ~= 1 then
	PQR_WriteToChat(&amp;quot;|cffff0000This rotation is designed for |cffFFDB3DHoly|cffff0000 Paladins. You should change your spec!|cffffffff&amp;quot;, &amp;quot;Warning&amp;quot;)
	PQR_StopRotation()
end

--Load variables &amp; functions
NumInGroup = 0
GroupType = &amp;quot;none&amp;quot;

function gethp(unit)
	local hp = 100 * (UnitHealth(unit) / UnitHealthMax(unit))
	return hp
end

--Set group type (this happens lots. needs fixing)
	if IsInGroup() and IsInRaid() then
		GroupType = &amp;quot;raid&amp;quot;
	elseif IsInGroup() then
		GroupType = &amp;quot;party&amp;quot;
	else
		GroupType = &amp;quot;none&amp;quot;
	end

NumInGroup = GetNumGroupMembers() - 1

--PQI Config
local config = {
  name  = &amp;apos;Holy&amp;apos;,
  author = &amp;apos;TheDarkSpoon&amp;apos;,
  abilities = {
   	{ name = &amp;quot;Use Healthstone&amp;quot;,
      enable = true,
      widget = {
        type = &amp;apos;numBox&amp;apos;,
        value = 75,
        step = 5,
        tooltip = &amp;quot;Default: 75&amp;quot;,
      },
      tooltip = &amp;quot;Use Healthstone when HP less than N%&amp;quot;,
    },
    { name = &amp;quot;Holy Light&amp;quot;,
      enable = true,
      widget = {
        type = &amp;apos;numBox&amp;apos;,
        value = 100,
        step = 5,
        tooltip = &amp;quot;Default: 100&amp;quot;,
      },
      tooltip = &amp;quot;Cast Holy Light on Unit with HP less than N%&amp;quot;,
    },
    { name = &amp;quot;Flash of Light&amp;quot;,
      enable = true,
      widget = {
        type = &amp;apos;numBox&amp;apos;,
        value = 35,
        step = 5,
        tooltip = &amp;quot;Default: 35&amp;quot;,
      },
      tooltip = &amp;quot;Cast Flash of Light on Unit with HP less than N%&amp;quot;,
    },
    { name = &amp;quot;Flash of Light on Tanks&amp;quot;,
      enable = true,
      widget = {
        type = &amp;apos;numBox&amp;apos;,
        value = 50,
        step = 5,
        tooltip = &amp;quot;Default: 50&amp;quot;,
      },
      tooltip = &amp;quot;Cast Flash of Light on Tanks with HP less than N%&amp;quot;,
    },
    { name = &amp;quot;Lay on Hands&amp;quot;,
      enable = true,
      widget = {
        type = &amp;apos;numBox&amp;apos;,
        value = 25,
        step = 5,
        tooltip = &amp;quot;Default: 25&amp;quot;,
      },
      tooltip = &amp;quot;Cast Lay on Hands on Unit with HP less than N%&amp;quot;,
    },
    { name = &amp;quot;Beacon of Light on&amp;quot;,
      enable = true,
      widget = {
        type = &amp;apos;select&amp;apos;,
        values = {&amp;quot;self&amp;quot;,&amp;quot;focus&amp;quot;,&amp;quot;mouseover&amp;quot;,&amp;quot;manual&amp;quot;},
        value = &amp;quot;focus&amp;quot;,
        step = 5,
        tooltip = &amp;quot;Default: focus&amp;quot;,
        width = 75,
      },
      tooltip = &amp;quot;Select Beacon of Light Target&amp;quot;,
    },
  },
  hotkeys = {
    { name = &amp;quot;Lights Hammer&amp;quot;,
      enable = true,
      hotkeys = {&amp;apos;lc&amp;apos;},
      tooltip = &amp;quot;Casts Light&amp;apos;s Hammer at your mouse position&amp;quot;
    },
    { name = &amp;quot;Set Focus to Mouseover&amp;quot;,
      enable = true,
      hotkeys = {&amp;apos;ls&amp;apos;},
      tooltip = &amp;quot;Sets Focus target to mouseover unit&amp;quot;
    },
  },
 }
 if not HOLY_CONFIG_LOADED then
	 HOLY_CONFIG_LOADED = PQI:AddRotation(config)
 end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>2 - Buffs</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------------
---               Blessings					 ---
------------------------------------------------
local _,_,_,_,_,_,_,caster = UnitBuffID(&amp;quot;player&amp;quot;,BUFF_BOK)
local _,_,_,_,_,_,_,caster2 = UnitBuffID(&amp;quot;player&amp;quot;,BUFF_BOM)

--Check self
if not UnitBuffID(&amp;quot;player&amp;quot;,BUFF_BOK) then
	CastSpellByID(BUFF_BOK)
elseif UnitBuffID(&amp;quot;player&amp;quot;,BUFF_BOK) and caster ~= &amp;quot;player&amp;quot; and not UnitBuffID(&amp;quot;player&amp;quot;,BUFF_BOM) then
	CastSpellByID(BUFF_BOM)
end

--Check others
for i = 1, NumInGroup+1 do
	if UnitBuffID(&amp;quot;player&amp;quot;, BUFF_BOK) 
	and UnitBuffID(GroupType .. i, BUFF_BOK)==nil 
	and caster==&amp;quot;player&amp;quot; 
	and IsSpellInRange(GetSpellInfo(BUFF_BOK), GroupType .. i)
	then
		CastSpellByID(BUFF_BOK)
	elseif UnitBuffID(&amp;quot;player&amp;quot;, BUFF_BOM) 
	and UnitBuffID(GroupType .. i, BUFF_BOM)==nil 
	and caster2==&amp;quot;player&amp;quot; 
	and IsSpellInRange(GetSpellInfo(BUFF_BOM), GroupType .. i)
	then
		CastSpellByID(BUFF_BOM)
	end
end

------------------------------------------------
---					Seals					 ---
------------------------------------------------
if GetShapeshiftForm(&amp;quot;player&amp;quot;) ~= 3 then
	CastSpellByID(BUFF_SOI)
end

------------------------------------------------
---				Beacon of Light				 ---
------------------------------------------------
focusexists, focusingroup = UnitExists(&amp;quot;focus&amp;quot;), nil
mouseoverexists, mouseoveringroup = UnitExists(&amp;quot;mouseover&amp;quot;), nil
if focusexists then
	if UnitInParty(&amp;quot;focus&amp;quot;) and not focusingroup then
		focusingroup = true
	end
	if UnitInRaid(&amp;quot;focus&amp;quot;) and not focusingroup then
		focusingroup = true
	end
end
if mouseoverexists then
	if UnitInParty(&amp;quot;mouseover&amp;quot;) and not mouseoveringroup then
		focusingroup = true
	end
	if UnitInRaid(&amp;quot;mouseover&amp;quot;) and not mouseoveringroup then
		mouseovergroup = true
	end
end
if PQI_TheDarkSpoonHoly_BeaconofLighton_enable and PQI_TheDarkSpoonHoly_BeaconofLighton_value ~= 4 then
	if PQI_TheDarkSpoonHoly_BeaconofLighton_value == 1 and not UnitBuffID(&amp;quot;player&amp;quot;, BUFF_BOL) then
		CastSpellByID(BUFF_BOL, &amp;quot;player&amp;quot;)
	elseif PQI_TheDarkSpoonHoly_BeaconofLighton_value == 2 then
		if focusexists and focusingroup and IsSpellInRange(GetSpellInfo(BUFF_BOL), &amp;quot;focus&amp;quot;) then
			CastSpellByID(BUFF_BOL, &amp;quot;focus&amp;quot;)
		elseif not UnitBuffID(&amp;quot;player&amp;quot;, BUFF_BOL) then
			CastSpellByID(BUFF_BOL, &amp;quot;player&amp;quot;)
		end
	elseif PQI_TheDarkSpoonHoly_BeaconofLighton_value == 3 then
		if mouseoverexists and mouseoveringroup and IsSpellInRange(GetSpellInfo(BUFF_BOL), &amp;quot;mouseover&amp;quot;) then
			CastSpellByID(BUFF_BOL, &amp;quot;mouseover&amp;quot;)
		elseif not UnitBuffID(&amp;quot;player&amp;quot;, BUFF_BOL) then
			CastSpellByID(BUFF_BOL, &amp;quot;player&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>3 - Healing</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------------
---           Scan health of party			 ---
------------------------------------------------
lowesthp_val, lowesthp_unit = gethp(&amp;quot;player&amp;quot;), &amp;quot;player&amp;quot;
for i=1,NumInGroup do
	if gethp(GroupType .. i) &amp;lt; lowesthp_val then
		lowesthp_val = gethp(GroupType .. i)
		lowesthp_unit = GroupType .. i
	end
end

------------------------------------------------
---				 Healthstone				 ---
------------------------------------------------
if PQI_TheDarkSpoonHoly_UseHealthstone_enable and lowesthp_val &amp;lt; PQI_TheDarkSpoonHoly_UseHealthstone_value and GetItemCount(5512,false,true) &amp;gt; 0 and PQR_SpellAvailable(5512) and GetItemCooldown(5512) == 0 then
	CastSpellByID(5512)
	return true
end

------------------------------------------------
---				 Lay on Hands				 ---
------------------------------------------------
if PQI_TheDarkSpoonHoly_LayonHands_enable and lowesthp_val &amp;lt; PQI_TheDarkSpoonHoly_LayonHands_value and PQR_SpellAvailable(HEAL_LAYONHANDS) and IsSpellInRange(GetSpellInfo(HEAL_LAYONHANDS), lowesthp_unit) then
	CastSpellByID(HEAL_LAYONHANDS, lowesthp_unit)
	return true
end

------------------------------------------------
---			 Flash of Light (Tank)			 ---
------------------------------------------------
if PQI_TheDarkSpoonHoly_FlashofLightonTanks_enable and lowesthp_val &amp;lt; PQI_TheDarkSpoonHoly_FlashofLightonTanks_value and PQR_SpellAvailable(HEAL_FLASHOFLIGHT) and IsSpellInRange(GetSpellInfo(HEAL_FLASHOFLIGHT), lowesthp_unit) and UnitGroupRolesAssigned(lowesthp_unit) == &amp;quot;TANK&amp;quot; then
	CastSpellByID(HEAL_FLASHOFLIGHT, lowesthp_unit)
	return true
end

------------------------------------------------
---				 Flash of Light				 ---
------------------------------------------------
if PQI_TheDarkSpoonHoly_FlashofLight_enable and lowesthp_val &amp;lt; PQI_TheDarkSpoonHoly_FlashofLight_value and PQR_SpellAvailable(HEAL_FLASHOFLIGHT) and IsSpellInRange(GetSpellInfo(HEAL_FLASHOFLIGHT), lowesthp_unit) then
	CastSpellByID(HEAL_FLASHOFLIGHT, lowesthp_unit)
	return true
end

------------------------------------------------
---           	  Holy Light	     		 ---
------------------------------------------------
if PQI_TheDarkSpoonHoly_HolyLight_enable and lowesthp_val &amp;lt; PQI_TheDarkSpoonHoly_HolyLight_value and PQR_SpellAvailable(HEAL_HOLYLIGHT) and IsSpellInRange(GetSpellInfo(HEAL_HOLYLIGHT), lowesthp_unit) then
	CastSpellByID(HEAL_HOLYLIGHT, lowesthp_unit)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>-Manual</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>------------------------------------------------
---               Lights Hammer				 ---
------------------------------------------------
if PQI_TheDarkSpoonHoly_LightsHammer_enable and PQI:IsHotkeys(PQI_TheDarkSpoonHoly_LightsHammer_key) and not GetCurrentKeyBoardFocus() then
	CastSpellByID(TALENT_LIGHTSHAMMER, lowesthp_unit)
	if SpellIsTargeting() then
		CameraOrSelectOrMoveStart() 
		CameraOrSelectOrMoveStop()
	end
	return true
end

------------------------------------------------
---              Focus Mouseover			 ---
------------------------------------------------
if PQI_TheDarkSpoonHoly_SetFocustoMouseover_enable and PQI:IsHotkeys(PQI_TheDarkSpoonHoly_SetFocustoMouseover_key) then
	FocusUnit(&amp;quot;mouseover&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></PALADIN>